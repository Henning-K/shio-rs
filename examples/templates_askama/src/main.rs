extern crate hyper;
extern crate shio;

#[macro_use]
extern crate askama;

use shio::prelude::*;
use askama::Template;

#[derive(Template)]
#[template(path = "hello.html")]
struct HelloTemplate {
    name: String,
}

// TODO: From what I understand, this should be put inside of Askama so it'll be autogenerated
//       Askama already does this for Rocket and Iron. Send a PR later.
impl shio::response::Responder for HelloTemplate {
    type Result = Response;

    fn to_response(self) -> Self::Result {
        Response::with(self.render())
    }
}

fn hello(ctx: Context) -> HelloTemplate {
    HelloTemplate { name: ctx.get::<Parameters>()["name"].into() }
}

fn main() {
    Shio::default()
        .route((Method::Get, "/hello/{name}", hello))
        .run(":7878")
        .unwrap()
}
